unit fr_SERVEREdit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.Samples.Spin, Terminal, fr_settings;

const
  MSG_CLOSING_REQUST = 'Были внесены изменения, Сохранить?';
  MSG_ERROR_HOST = 'Строка "адрес" не должна превышать 38 символов';

type
  TfrServerEdit = class(TForm)
    plMain: TPanel;
    plButtons: TPanel;
    btnClose: TButton;
    btnSave: TButton;
    btnReset: TButton;
    plHost: TPanel;
    plPort: TPanel;
    lbHost: TLabel;
    lbPort: TLabel;
    edHost: TEdit;
    spPort: TSpinEdit;
    procedure btnCloseClick(Sender: TObject);
    procedure btnSaveClick(Sender: TObject);
    procedure btnResetClick(Sender: TObject);
    procedure spPortMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure spPortKeyPress(Sender: TObject; var Key: Char);
    procedure edHostKeyPress(Sender: TObject; var Key: Char);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
  private
    { Private declarations }
    FConfBuf  : TConfig;
    FConfCurr : Tconfig;
    FConfSave : TConfig;
    settings  : TfrSettings;
    procedure save;
    function  getServerAddress         : String;
    function  setHost(_host : String)  : boolean;
    function  setPort(_Port : Word)    : boolean;
    function  createFormSettings(param : TWinControl; _val : TeditSpin) : real;
  public
    { Public declarations }
    procedure setServerSettings(_ServerSettings: Tconfig);                      // Установить принятые настройки
    function  getServerSettings:Tbytes;                                         // Вернуть установленные настройки
  end;

var
  frServerEdit: TfrServerEdit;

implementation

{$R *.dfm}

function TfrServerEdit.getServerAddress: String;
var buff : TBytes;
begin
  SetLength(buff, 40);
  move(FConfCurr.ServerAddress[0], buff[0], 38);
  buff[39] := 0;
  result := PAnsiChar(@buff[0]);
end;

procedure TfrServerEdit.btnCloseClick(Sender: TObject);
begin
  close;
end;

procedure TfrServerEdit.btnResetClick(Sender: TObject);
begin
  setServerSettings(FConfBuf);
end;

procedure TfrServerEdit.btnSaveClick(Sender: TObject);
begin
  save;
  FConfBuf := FConfCurr;
end;

function TfrServerEdit.getServerSettings: Tbytes;
begin
  SetLength(result, 40);
  move(FConfCurr.ServerAddress[0], result[0], 38);
  move(FConfCurr.ServerPort[0],    result[38], 2);
end;

procedure TfrServerEdit.save;
begin
  setHost(edHost.Text);
  setPort(spPort.Value);
end;

function TfrServerEdit.setHost(_host: String) : Boolean;
var buf : TBytes;
begin
  result:=true;

  if Length(_host) > sizeOf(FConfCurr.ServerAddress) then
  begin
    MessageDlg(MSG_ERROR_HOST,TMsgDlgType.mtError, [TMsgDlgBtn.mbOK], 0);
    result:=false;
    exit;
  end;

  try
    buf := TEncoding.UTF8.GetBytes(_host);
    FillChar(FConfCurr.ServerAddress[0], SizeOf(FConfCurr.ServerAddress), 0);         // Очистка массива перед копированием
    Move(buf[0], FConfCurr.ServerAddress[0], Length(buf));
  except
    result := false;
  end;
end;

function TfrServerEdit.setPort(_Port: word) : Boolean;
begin
  result := true;
  try
    FConfCurr.ServerPort[0] := Hi(_Port);
    FConfCurr.ServerPort[1] := LO(_Port);
  except
    result := false;
  end;
end;

procedure TfrServerEdit.setServerSettings(_ServerSettings: TConfig);
begin
  FConfBuf := _ServerSettings;
  FConfCurr   := _ServerSettings;

  edHost.Text  :=  getServerAddress;
  spPort.Value := (FConfCurr.ServerPort[0] shl 8) or FConfCurr.ServerPort[1];
end;

function TfrServerEdit.createFormSettings(param : TWinControl; _val : TeditSpin) : real;
begin
  try
    settings      := TfrSettings.Create(nil);
    settings.Top  := self.Top  + param.Top  + 30;
    settings.Left := self.Left + spPort.Left + plPort.Left + plPort.Margins.Left + plPort.Margins.Right;
    settings.setData(_val);
    settings.ShowModal;
    param.SetFocus;
  finally
    result := settings.getResult;
    settings.Free;
  end;
end;

procedure TfrServerEdit.edHostKeyPress(Sender: TObject; var Key: Char);
begin
  if key = #13 then spPort.SetFocus;
end;


function StructuresEqual(const Struct1, Struct2: TConfig): Boolean;
begin
  Result := CompareMem(@Struct1, @Struct2, SizeOf(TConfig));
end;

procedure TfrServerEdit.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
  CanClose := false;
  Save;                                                                         // Сохраняем конфигурацию

  if StructuresEqual(FConfCurr,FConfBuf) then                                   // Если сохраненная конфигурация равна изначальной
  begin
    CanClose := true;
    exit;
  end;

  CanClose := true;
  if MessageDlg(MSG_CLOSING_REQUST, TMsgDlgType.mtConfirmation, [mbyes, mbNo], 0 ) = mrNo
  then FConfCurr := FConfBuf;
end;

procedure TfrServerEdit.spPortKeyPress(Sender: TObject; var Key: Char);
begin
  if key = '+' then spPort.Value := spPort.Value+1;
  if key = '-' then spPort.Value := spPort.Value-1;

  if key = #24 then spPort.Value := spPort.Value+1;
  if key = #25 then spPort.Value := spPort.Value-1;

  if key = #13 then save;

  if not (Key in ['0'..'9', #8]) then
    Key := #0; // отмена ввода символа, если он не является цифрой или Backspace
end;

procedure TfrServerEdit.spPortMouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
var val : TeditSpin;
    res : real;
begin
  val.Min       := spPort.MinValue;
  val.Max       := spPort.MaxValue;
  val.offset    := 1;
  val.position  := spPort.Value;
  val.prescaler := 1;
  res := createFormSettings(plPort, val);
  spPort.Value := round(res);
end;

end.
